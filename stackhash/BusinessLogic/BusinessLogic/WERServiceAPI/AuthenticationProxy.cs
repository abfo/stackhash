//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.312.
// 
namespace StackHash.WindowsErrorReporting.Services.Data.API
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IBasicTicket", Namespace="http://tempuri.org/")]
    public partial class AuthenticationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetBasicTicketOperationCompleted;

        /// <summary>
        /// Authentication Service Constructor.
        ///     - Assign the service URL.
        /// </summary>
        public AuthenticationService() {
            this.Url = Utility.GetServiceURL(Constants.authenticationURL);
        }
        
        /// <remarks/>
        public event GetBasicTicketCompletedEventHandler GetBasicTicketCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://winqual.microsoft.com/Services/Authentication/IBasicTicket/GetBasicTicket" +
            "", RequestNamespace = "https://winqual.microsoft.com/Services/Authentication/", ResponseNamespace = "https://winqual.microsoft.com/Services/Authentication/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string GetBasicTicket([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string userName, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string password) {
            object[] results = this.Invoke("GetBasicTicket", new object[] {
                        userName,
                        password});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBasicTicket(string userName, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBasicTicket", new object[] {
                        userName,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetBasicTicket(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetBasicTicketAsync(string username, string password) {
            this.GetBasicTicketAsync(username, password, null);
        }
        
        /// <remarks/>
        public void GetBasicTicketAsync(string username, string password, object userState) {
            if ((this.GetBasicTicketOperationCompleted == null)) {
                this.GetBasicTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBasicTicketOperationCompleted);
            }
            this.InvokeAsync("GetBasicTicket", new object[] {
                        username,
                        password}, this.GetBasicTicketOperationCompleted, userState);
        }
        
        private void OnGetBasicTicketOperationCompleted(object arg) {
            if ((this.GetBasicTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBasicTicketCompleted(this, new GetBasicTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.312")]
    public delegate void GetBasicTicketCompletedEventHandler(object sender, GetBasicTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.312")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBasicTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBasicTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
