//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StackHash.EmailPlugin.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StackHash.EmailPlugin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash added a new event to {0} {1} during synchronization:
        ///
        ///Event ID: {2}
        ///Event Type: {3}
        ///Event Hits: {4}
        ///
        ///Event Signature:
        ///
        ///{5}
        ///
        ///--
        ///
        ///StackHash
        ///http://www.stackhash.com/.
        /// </summary>
        internal static string EventAdded_MessageTemplate {
            get {
                return ResourceManager.GetString("EventAdded_MessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash: Event added to {0} {1} during sync ({2}).
        /// </summary>
        internal static string EventAdded_SubjectTemplate {
            get {
                return ResourceManager.GetString("EventAdded_SubjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A StackHash user reported an event for {0} {1}:
        ///
        ///Event ID: {2}
        ///Event Type: {3}
        ///Event Hits: {4}
        ///
        ///Event Signature:
        ///
        ///{5}
        ///
        ///--
        ///
        ///StackHash
        ///http://www.stackhash.com/.
        /// </summary>
        internal static string EventManaulReport_MessageTemplate {
            get {
                return ResourceManager.GetString("EventManaulReport_MessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash: Manual event report for {0} {1} ({2}).
        /// </summary>
        internal static string EventManualReport_SubjectTemplate {
            get {
                return ResourceManager.GetString("EventManualReport_SubjectTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sends email when an event is added and optionally when a new product mapping is added. Emails can be triggered automatically or manually..
        /// </summary>
        internal static string Plugin_Description {
            get {
                return ResourceManager.GetString("Plugin_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash Email Plugin.
        /// </summary>
        internal static string Plugin_Name {
            get {
                return ResourceManager.GetString("Plugin_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash added a new product mapping from WinQual during synchronization:
        ///
        ///{0} {1} (ID: {2})
        ///
        ///Note that new products are disabled by default. To start adding data for the new product run StackHash, right-click the product and choose Enable Synchronization from the context menu.
        ///
        ///--
        ///
        ///StackHash
        ///http://www.stackhash.com/.
        /// </summary>
        internal static string ProductAdded_MessageTemplate {
            get {
                return ResourceManager.GetString("ProductAdded_MessageTemplate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash: Product added during sync ({0} {1}).
        /// </summary>
        internal static string ProductAdded_SubjectTemplate {
            get {
                return ResourceManager.GetString("ProductAdded_SubjectTemplate", resourceCulture);
            }
        }
    }
}
