//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StackHash.FogBugzPlugin.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("StackHash.FogBugzPlugin.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash added a cab:
        ///
        ///Cab Id: {0}
        ///Downloaded: {1}
        ///Purged: {2}
        ///Size: {3}
        ///
        ///Analysis:
        ///
        ///{4}.
        /// </summary>
        internal static string CabAdded_Template {
            get {
                return ResourceManager.GetString("CabAdded_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash User {0} added a note for cab {1} on {2} at {3} (Source: {4})
        ///
        ///{5}.
        /// </summary>
        internal static string CabNote_Template {
            get {
                return ResourceManager.GetString("CabNote_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash updated cab {0}:
        ///
        ///Downloaded: {1}
        ///Purged: {2}
        ///Size: {3}
        ///
        ///Analysis:
        ///
        ///{4}.
        /// </summary>
        internal static string CabUpdated_Template {
            get {
                return ResourceManager.GetString("CabUpdated_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Bugz Id: {0}.
        /// </summary>
        internal static string Case_Template {
            get {
                return ResourceManager.GetString("Case_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Hits: {0:n0}
        ///
        ///Event Signature:
        ///
        ///{1}.
        /// </summary>
        internal static string CaseText_Template {
            get {
                return ResourceManager.GetString("CaseText_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WinQual Event {0} : {1} for {2} {3}.
        /// </summary>
        internal static string CaseTitle_Template {
            get {
                return ResourceManager.GetString("CaseTitle_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash User {0} added a note for this event on {1} at {2} (Source: {3})
        ///
        ///{4}.
        /// </summary>
        internal static string EventNote_Template {
            get {
                return ResourceManager.GetString("EventNote_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Event Hits now: {0:n0}.
        /// </summary>
        internal static string EventUpdated_Template {
            get {
                return ResourceManager.GetString("EventUpdated_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Adds and updates cases in FogBugz, either manually or automatically during synchronization. An event hit threshold allows only high hit count events to be added..
        /// </summary>
        internal static string Plugin_Description {
            get {
                return ResourceManager.GetString("Plugin_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to StackHash FogBugz Plugin.
        /// </summary>
        internal static string Plugin_Name {
            get {
                return ResourceManager.GetString("Plugin_Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Script results for {0} (version {1}) run on cab {2} on {3} at {4}:
        ///
        ///{5}.
        /// </summary>
        internal static string ScriptResults_Template {
            get {
                return ResourceManager.GetString("ScriptResults_Template", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GB.
        /// </summary>
        internal static string Size_GB {
            get {
                return ResourceManager.GetString("Size_GB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to KB.
        /// </summary>
        internal static string Size_KB {
            get {
                return ResourceManager.GetString("Size_KB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MB.
        /// </summary>
        internal static string Size_MB {
            get {
                return ResourceManager.GetString("Size_MB", resourceCulture);
            }
        }
    }
}
